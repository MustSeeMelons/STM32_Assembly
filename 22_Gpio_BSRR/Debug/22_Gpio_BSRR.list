
22_Gpio_BSRR.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000184  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000140  08000184  08000184  00001184  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  080002c4  080002cc  000012cc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  080002c4  080002c4  000012cc  2**0
                  CONTENTS
  4 .ARM          00000000  080002c4  080002c4  000012cc  2**0
                  CONTENTS
  5 .preinit_array 00000000  080002c4  080002cc  000012cc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080002c4  080002c4  000012c4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  080002c8  080002c8  000012c8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000000  20000000  20000000  000012cc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .sram2        00000000  10000000  10000000  000012cc  2**0
                  CONTENTS
 10 .bss          0000001c  20000000  20000000  00002000  2**2
                  ALLOC
 11 ._user_heap_stack 00000604  2000001c  2000001c  00002000  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  000012cc  2**0
                  CONTENTS, READONLY
 13 .debug_line   000000e2  00000000  00000000  000012fc  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_line_str 0000007d  00000000  00000000  000013de  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_info   00000054  00000000  00000000  0000145b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_abbrev 00000038  00000000  00000000  000014af  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_aranges 00000048  00000000  00000000  000014e8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00000099  00000000  00000000  00001530  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_rnglists 00000019  00000000  00000000  000015c9  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_frame  0000002c  00000000  00000000  000015e4  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000184 <__do_global_dtors_aux>:
 8000184:	b510      	push	{r4, lr}
 8000186:	4c05      	ldr	r4, [pc, #20]	@ (800019c <__do_global_dtors_aux+0x18>)
 8000188:	7823      	ldrb	r3, [r4, #0]
 800018a:	b933      	cbnz	r3, 800019a <__do_global_dtors_aux+0x16>
 800018c:	4b04      	ldr	r3, [pc, #16]	@ (80001a0 <__do_global_dtors_aux+0x1c>)
 800018e:	b113      	cbz	r3, 8000196 <__do_global_dtors_aux+0x12>
 8000190:	4804      	ldr	r0, [pc, #16]	@ (80001a4 <__do_global_dtors_aux+0x20>)
 8000192:	f3af 8000 	nop.w
 8000196:	2301      	movs	r3, #1
 8000198:	7023      	strb	r3, [r4, #0]
 800019a:	bd10      	pop	{r4, pc}
 800019c:	20000000 	.word	0x20000000
 80001a0:	00000000 	.word	0x00000000
 80001a4:	080002ac 	.word	0x080002ac

080001a8 <frame_dummy>:
 80001a8:	b508      	push	{r3, lr}
 80001aa:	4b03      	ldr	r3, [pc, #12]	@ (80001b8 <frame_dummy+0x10>)
 80001ac:	b11b      	cbz	r3, 80001b6 <frame_dummy+0xe>
 80001ae:	4903      	ldr	r1, [pc, #12]	@ (80001bc <frame_dummy+0x14>)
 80001b0:	4803      	ldr	r0, [pc, #12]	@ (80001c0 <frame_dummy+0x18>)
 80001b2:	f3af 8000 	nop.w
 80001b6:	bd08      	pop	{r3, pc}
 80001b8:	00000000 	.word	0x00000000
 80001bc:	20000004 	.word	0x20000004
 80001c0:	080002ac 	.word	0x080002ac

080001c4 <__main>:
.globl __main // So startup file sees the function

__main:
	// XXX Enable PCLK for GPIOA
	// Point r0 to RCC_AHB1ENR (load address)
	ldr r0,=RCC_AHB2_ENR
 80001c4:	480f      	ldr	r0, [pc, #60]	@ (8000204 <delay+0x6>)
	// Load value found at address r0 into r1
	ldr r1, [r0]
 80001c6:	6801      	ldr	r1, [r0, #0]
	// Perform an OR, result in r1
	orr r1,#GPIO_A_EN
 80001c8:	f041 0101 	orr.w	r1, r1, #1
	// Store updated value back
	str r1,[r0]
 80001cc:	6001      	str	r1, [r0, #0]

	// XXX Set PA5 as output
	ldr r0,=GPIO_A_MODER
 80001ce:	f04f 4090 	mov.w	r0, #1207959552	@ 0x48000000
	ldr r1,[r0]
 80001d2:	6801      	ldr	r1, [r0, #0]
	and r1,#MODER_5_RESET
 80001d4:	f421 6140 	bic.w	r1, r1, #3072	@ 0xc00
	orr r1,#MODER_5_OUT
 80001d8:	f441 6180 	orr.w	r1, r1, #1024	@ 0x400
	str r1,[r0]
 80001dc:	6001      	str	r1, [r0, #0]

080001de <blink>:
blink:
	ldr r0,=GPIO_A_BSRR
 80001de:	480a      	ldr	r0, [pc, #40]	@ (8000208 <delay+0xa>)
	ldr r1,[r0]
 80001e0:	6801      	ldr	r1, [r0, #0]
	orr r1,#GPIO_A5_BSRR_HIGH
 80001e2:	f041 0120 	orr.w	r1, r1, #32
	str r1,[r0]
 80001e6:	6001      	str	r1, [r0, #0]

	ldr r3,=ONE_SEC
 80001e8:	4b08      	ldr	r3, [pc, #32]	@ (800020c <delay+0xe>)
	bl delay
 80001ea:	f000 f808 	bl	80001fe <delay>

	ldr r1,[r0]
 80001ee:	6801      	ldr	r1, [r0, #0]
	orr r1,#GPIO_A5_BSRR_LOW
 80001f0:	f441 1100 	orr.w	r1, r1, #2097152	@ 0x200000
	str r1,[r0]
 80001f4:	6001      	str	r1, [r0, #0]

	ldr r3,=ONE_SEC
 80001f6:	4b05      	ldr	r3, [pc, #20]	@ (800020c <delay+0xe>)
	bl delay
 80001f8:	f000 f801 	bl	80001fe <delay>

	b blink
 80001fc:	e7ef      	b.n	80001de <blink>

080001fe <delay>:

delay:
	subs r3,r3,#1
 80001fe:	3b01      	subs	r3, #1
	bne delay
 8000200:	d1fd      	bne.n	80001fe <delay>
	bx lr
 8000202:	4770      	bx	lr
	ldr r0,=RCC_AHB2_ENR
 8000204:	4002104c 	.word	0x4002104c
	ldr r0,=GPIO_A_BSRR
 8000208:	48000018 	.word	0x48000018
	ldr r3,=ONE_SEC
 800020c:	00145855 	.word	0x00145855

08000210 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000210:	480d      	ldr	r0, [pc, #52]	@ (8000248 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000212:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000214:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000218:	480c      	ldr	r0, [pc, #48]	@ (800024c <LoopForever+0x6>)
  ldr r1, =_edata
 800021a:	490d      	ldr	r1, [pc, #52]	@ (8000250 <LoopForever+0xa>)
  ldr r2, =_sidata
 800021c:	4a0d      	ldr	r2, [pc, #52]	@ (8000254 <LoopForever+0xe>)
  movs r3, #0
 800021e:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000220:	e002      	b.n	8000228 <LoopCopyDataInit>

08000222 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000222:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000224:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000226:	3304      	adds	r3, #4

08000228 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000228:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800022a:	428c      	cmp	r4, r1
  bcc CopyDataInit
 800022c:	d3f9      	bcc.n	8000222 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800022e:	4a0a      	ldr	r2, [pc, #40]	@ (8000258 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000230:	4c0a      	ldr	r4, [pc, #40]	@ (800025c <LoopForever+0x16>)
  movs r3, #0
 8000232:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000234:	e001      	b.n	800023a <LoopFillZerobss>

08000236 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000236:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000238:	3204      	adds	r2, #4

0800023a <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800023a:	42a2      	cmp	r2, r4
  bcc FillZerobss
 800023c:	d3fb      	bcc.n	8000236 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800023e:	f000 f811 	bl	8000264 <__libc_init_array>
/* Call the application's entry point.*/
  bl __main
 8000242:	f7ff ffbf 	bl	80001c4 <__main>

08000246 <LoopForever>:

LoopForever:
  b LoopForever
 8000246:	e7fe      	b.n	8000246 <LoopForever>
  ldr   r0, =_estack
 8000248:	20018000 	.word	0x20018000
  ldr r0, =_sdata
 800024c:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000250:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8000254:	080002cc 	.word	0x080002cc
  ldr r2, =_sbss
 8000258:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 800025c:	2000001c 	.word	0x2000001c

08000260 <ADC1_2_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000260:	e7fe      	b.n	8000260 <ADC1_2_IRQHandler>
	...

08000264 <__libc_init_array>:
 8000264:	b570      	push	{r4, r5, r6, lr}
 8000266:	4d0d      	ldr	r5, [pc, #52]	@ (800029c <__libc_init_array+0x38>)
 8000268:	4c0d      	ldr	r4, [pc, #52]	@ (80002a0 <__libc_init_array+0x3c>)
 800026a:	1b64      	subs	r4, r4, r5
 800026c:	10a4      	asrs	r4, r4, #2
 800026e:	2600      	movs	r6, #0
 8000270:	42a6      	cmp	r6, r4
 8000272:	d109      	bne.n	8000288 <__libc_init_array+0x24>
 8000274:	4d0b      	ldr	r5, [pc, #44]	@ (80002a4 <__libc_init_array+0x40>)
 8000276:	4c0c      	ldr	r4, [pc, #48]	@ (80002a8 <__libc_init_array+0x44>)
 8000278:	f000 f818 	bl	80002ac <_init>
 800027c:	1b64      	subs	r4, r4, r5
 800027e:	10a4      	asrs	r4, r4, #2
 8000280:	2600      	movs	r6, #0
 8000282:	42a6      	cmp	r6, r4
 8000284:	d105      	bne.n	8000292 <__libc_init_array+0x2e>
 8000286:	bd70      	pop	{r4, r5, r6, pc}
 8000288:	f855 3b04 	ldr.w	r3, [r5], #4
 800028c:	4798      	blx	r3
 800028e:	3601      	adds	r6, #1
 8000290:	e7ee      	b.n	8000270 <__libc_init_array+0xc>
 8000292:	f855 3b04 	ldr.w	r3, [r5], #4
 8000296:	4798      	blx	r3
 8000298:	3601      	adds	r6, #1
 800029a:	e7f2      	b.n	8000282 <__libc_init_array+0x1e>
 800029c:	080002c4 	.word	0x080002c4
 80002a0:	080002c4 	.word	0x080002c4
 80002a4:	080002c4 	.word	0x080002c4
 80002a8:	080002c8 	.word	0x080002c8

080002ac <_init>:
 80002ac:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80002ae:	bf00      	nop
 80002b0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80002b2:	bc08      	pop	{r3}
 80002b4:	469e      	mov	lr, r3
 80002b6:	4770      	bx	lr

080002b8 <_fini>:
 80002b8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80002ba:	bf00      	nop
 80002bc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80002be:	bc08      	pop	{r3}
 80002c0:	469e      	mov	lr, r3
 80002c2:	4770      	bx	lr
